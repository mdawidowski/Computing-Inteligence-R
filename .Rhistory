fitness = function(temp, phi){
licz = 0
wynik = FALSE
max = max(as.numeric(unlist(phi)))
for(i in 1:nrow(phi)){
row <- phi[i,]
row_1 <- abs(row[1])%%3
if(row_1 == 0){ row_1 = 3}
row_2 <- abs(row[2])%%3
if(row_2 == 0){ row_2 = 3}
row_3 <- abs(row[3])%%3
if(row_3 == 0){ row_3 = 3}
x1 = temp[row_1]
if(row[1] < 0){ x1 = !x1 }
x2 = temp[row_2]
if(row[2] < 0){ x2 = !x2 }
x3 = temp[row_3]
if(row[3] < 0){ x3 = !x3 }
wynik = x1 | x2 | x3
if(!is.na(wynik)){ if(wynik){ licz = licz + 1 } }
}
return(licz)
}
#d
licz = fitness(c(1,0,1,1), phi1)
#d
licz = fitness(c(1,1,1,0), phi1)
#a
phi1 <- matrix(c(-1,-2,1,1,2,-1,1,2,3,-3,-2,-3,3,2,4,4,4,-4,-4,-4,3,0,0,0,0,0,0,0), ncol=4)
#b
phi2 <- as.matrix(read.csv("/home/marcin/Computing-Inteligence-R/Lab1/dubois20.cnf.txt", header=FALSE, skip=13, sep="", colClasses=c(NA,NA,NA,"NULL")))
#c
fitness = function(temp, phi){
licz = 0
wynik = FALSE
max = max(as.numeric(unlist(phi)))
for(i in 1:nrow(phi)){
row <- phi[i,]
row_1 <- abs(row[1])%%3
if(row_1 == 0){ row_1 = 3}
row_2 <- abs(row[2])%%3
if(row_2 == 0){ row_2 = 3}
row_3 <- abs(row[3])%%3
if(row_3 == 0){ row_3 = 3}
x1 = temp[row_1]
if(row[1] < 0){ x1 = !x1 }
x2 = temp[row_2]
if(row[2] < 0){ x2 = !x2 }
x3 = temp[row_3]
if(row[3] < 0){ x3 = !x3 }
wynik = x1 | x2 | x3
if(!is.na(wynik)){ if(wynik){ licz = licz + 1 } }
}
return(licz)
}
#d
licz = fitness(c(1,1,1,0), phi1)
iris.numeric <- as.matrix(iris[,-5], col.names=F)
View(iris.numeric)
log(iris.numeric)
View(iris.numeric)
iris <- prcomp(iris)
iris <- prcomp(iris, is.na(TRUE))
iris.numeric <- as.matrix(iris[,-5], col.names=F)
iris.log <- log(iris.numeric)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.numeric <- as.matrix(iris[,-5], col.names=F)
iris.log <- log(iris.numeric)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
View(iris.pca)
View(iris.pca)
plot(iris.pca)
iris.pca.data <- iris.pca.data[,-3]
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)
View(iris.pca.data)
iris.pca.data <- iris.pca.data[,1,2]
iris.pca.data <- iris.pca.data[1,2]
View(iris.pca)
iris.pca.data <- iris.pca.data[,-2]
iris.pca.data <- predict(iris.pca)
iris.pca.data <- iris.pca.data[,-2]
iris.pca.data <- predict(iris.pca)[1:2]
View(iris.pca)
plot(iris.pca.data)
iris.pca.data <- predict(iris.pca)[,1:2]
plot(iris.pca.data)
plot(iris)
iris <- kmeans(iris.pca.data)
plot(iris)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
iris <- kmeans(iris.pca.data)
plot(iris)
iris.numeric <- as.matrix(iris[,-5], col.names=F)
iris.log <- log(iris.numeric)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
iris.m <- kmeans(iris.pca.data)
plot(iris.m)
iris.numeric <- as.matrix(iris[,-5], col.names=F)
iris.log <- log(iris.numeric)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
iris.m <- kmeans(iris.pca.data)
plot(iris.m)
require(graphics)
#
iris.numeric <- data.matrix(iris[,-5])
colnames(iris.numeric) <- NULL
iris.log <- log(iris.numeric)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 4, cex = 3)
#set.seed(1234)
iris.numeric <- data.matrix(iris[,-5])
colnames(iris.numeric) <- NULL
iris.log <- log(iris.numeric)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
mykmeans <- function(k, i, irises){
random_points <-list()
for(x in 1:k){
ran_x <- irises[sample(nrow(irises), 1), 1]
ran_y <- irises[sample(nrow(irises), 1), 2]
random_points <- c(random_points, ran_x, ran_y)
}
centroids <- matrix(c(random_points), ncol=2)
cluster <- c()
for(j in 1:i){
for(x in 1:nrow(irises)){
neighbours <- c()
for(y in 1:k) neighbours[[y]] <- dist(rbind(irises[x,], centroids[y,]), method="euclidean")
cluster[[x]] <- grep(min(neighbours), neighbours)
}
iris.clustering <- cbind(irises, cluster)
iris.clustering <- split(data.frame(iris.clustering), iris.clustering[,3])
centroids <- c()
for(x in 1:k){
centroid_x <- colMeans(as.data.frame(iris.clustering[x])[,1:2])[1]
centroid_y <- colMeans(as.data.frame(iris.clustering[x])[,1:2])[2]
centroids <- c(centroids, centroid_x, centroid_y)
}
centroids <- matrix(c(centroids), ncol=2)
png(filename = paste("kmeans_my/iteration_", j, ".png", sep=""))
plot(irises, col=cluster, main=paste("iteration_", j, sep=""))
points(centroids, pch=4, cex=2, col=2)
dev.off()
}
try(system("convert -delay 100 -loop 0 $(ls kmeans_my/*.png | sort -V) kmeans_my/animation.gif"))
try(system("rm kmeans_my/*.png"))
}
#
mykmeans(3, 10, iris.pca.data)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 4, cex = 3)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 4, cex = 3)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 4, cex = 3)
require(graphics)
#
iris.numeric <- data.matrix(iris[,-5])
colnames(iris.numeric) <- NULL
iris.log <- log(iris.numeric)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 4, cex = 3)
require(graphics)
#
iris.numeric <- data.matrix(iris[,-5])
colnames(iris.numeric) <- NULL
iris.log <- log(iris.numeric)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 4, cex = 3)
require(graphics)
#
iris.numeric <- data.matrix(iris[,-5])
colnames(iris.numeric) <- NULL
iris.log <- log(iris.numeric)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 4, cex = 3)
require(graphics)
#
iris.numeric <- data.matrix(iris[,-5])
colnames(iris.numeric) <- NULL
iris.log <- log(iris.numeric)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 4, cex = 3)
require(graphics)
#
iris.numeric <- data.matrix(iris[,-5])
colnames(iris.numeric) <- NULL
iris.log <- log(iris.numeric)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 4, cex = 3)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 4, cex = 3)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 4, cex = 3)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 3)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
require(graphics)
#
iris <- data.matrix(iris[,-5])
colnames(iris) <- NULL
iris.log <- log(iris)
iris.preproc <- scale(iris.log)
iris.pca <- prcomp(iris.preproc)
iris.pca.data <- predict(iris.pca)[,1:2]
#
iris.kmeans <- kmeans(iris.pca.data, 3)
plot(iris.pca.data, col = iris.kmeans$cluster)
points(iris.kmeans$centers, col = 1:3, pch = 3, cex = 2)
